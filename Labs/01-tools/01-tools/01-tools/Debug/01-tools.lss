
01-tools.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000200  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001ac  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000200  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000230  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000270  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000970  00000000  00000000  00000290  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000066f  00000000  00000000  00000c00  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000039c  00000000  00000000  0000126f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  0000160c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000039c  00000000  00000000  00001630  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000360  00000000  00000000  000019cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001d2c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
 **********************************************************************/
int main(void)
{
    // Set pin as output in Data Direction Register
    // DDRB = DDRB or 0010 0000
    DDRB = DDRB | (1<<LED_GREEN);       //zapnuti ledky
  80:	25 9a       	sbi	0x04, 5	; 4

    // Set pin LOW in Data Register (LED off)
    // PORTB = PORTB and 1101 1111
    PORTB = PORTB & ~(1<<LED_GREEN);  
  82:	2d 98       	cbi	0x05, 5	; 5
        */
        //D
        _delay_ms(LONG_DELAY);
        DDRB = DDRB | (1<<LED_GREEN);
        _delay_ms(SHORT_DELAY);
        PORTB = PORTB ^ (1<<LED_GREEN);
  84:	80 e2       	ldi	r24, 0x20	; 32
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  86:	2f ef       	ldi	r18, 0xFF	; 255
  88:	35 ea       	ldi	r19, 0xA5	; 165
  8a:	9e e0       	ldi	r25, 0x0E	; 14
  8c:	21 50       	subi	r18, 0x01	; 1
  8e:	30 40       	sbci	r19, 0x00	; 0
  90:	90 40       	sbci	r25, 0x00	; 0
  92:	e1 f7       	brne	.-8      	; 0x8c <main+0xc>
  94:	00 c0       	rjmp	.+0      	; 0x96 <main+0x16>
  96:	00 00       	nop
        zvuková pauza uvnitø znaèky má stejnou dobu trvání jako jedna teèka.
        zvuková pauza mezi znaèkami má stejnou dobu trvání jako jedna èárka.
        */
        //D
        _delay_ms(LONG_DELAY);
        DDRB = DDRB | (1<<LED_GREEN);
  98:	25 9a       	sbi	0x04, 5	; 4
  9a:	2f ef       	ldi	r18, 0xFF	; 255
  9c:	31 ee       	ldi	r19, 0xE1	; 225
  9e:	94 e0       	ldi	r25, 0x04	; 4
  a0:	21 50       	subi	r18, 0x01	; 1
  a2:	30 40       	sbci	r19, 0x00	; 0
  a4:	90 40       	sbci	r25, 0x00	; 0
  a6:	e1 f7       	brne	.-8      	; 0xa0 <main+0x20>
  a8:	00 c0       	rjmp	.+0      	; 0xaa <main+0x2a>
  aa:	00 00       	nop
        _delay_ms(SHORT_DELAY);
        PORTB = PORTB ^ (1<<LED_GREEN);
  ac:	95 b1       	in	r25, 0x05	; 5
  ae:	98 27       	eor	r25, r24
  b0:	95 b9       	out	0x05, r25	; 5
        
        DDRB = DDRB | (1<<LED_GREEN);
  b2:	25 9a       	sbi	0x04, 5	; 4
        PORTB = PORTB ^ (1<<LED_GREEN);
  b4:	95 b1       	in	r25, 0x05	; 5
  b6:	98 27       	eor	r25, r24
  b8:	95 b9       	out	0x05, r25	; 5
        
        DDRB = DDRB | (1<<LED_GREEN);
  ba:	25 9a       	sbi	0x04, 5	; 4
  bc:	2f ef       	ldi	r18, 0xFF	; 255
  be:	35 ea       	ldi	r19, 0xA5	; 165
  c0:	9e e0       	ldi	r25, 0x0E	; 14
  c2:	21 50       	subi	r18, 0x01	; 1
  c4:	30 40       	sbci	r19, 0x00	; 0
  c6:	90 40       	sbci	r25, 0x00	; 0
  c8:	e1 f7       	brne	.-8      	; 0xc2 <main+0x42>
  ca:	00 c0       	rjmp	.+0      	; 0xcc <main+0x4c>
  cc:	00 00       	nop
        _delay_ms(LONG_DELAY);
        PORTB = PORTB ^ (1<<LED_GREEN);
  ce:	95 b1       	in	r25, 0x05	; 5
  d0:	98 27       	eor	r25, r24
  d2:	95 b9       	out	0x05, r25	; 5
  d4:	2f ef       	ldi	r18, 0xFF	; 255
  d6:	31 ee       	ldi	r19, 0xE1	; 225
  d8:	94 e0       	ldi	r25, 0x04	; 4
  da:	21 50       	subi	r18, 0x01	; 1
  dc:	30 40       	sbci	r19, 0x00	; 0
  de:	90 40       	sbci	r25, 0x00	; 0
  e0:	e1 f7       	brne	.-8      	; 0xda <main+0x5a>
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <main+0x64>
  e4:	00 00       	nop
        //E
        _delay_ms(SHORT_DELAY);
        DDRB = DDRB | (1<<LED_GREEN);
  e6:	25 9a       	sbi	0x04, 5	; 4
  e8:	2f ef       	ldi	r18, 0xFF	; 255
  ea:	35 ea       	ldi	r19, 0xA5	; 165
  ec:	9e e0       	ldi	r25, 0x0E	; 14
  ee:	21 50       	subi	r18, 0x01	; 1
  f0:	30 40       	sbci	r19, 0x00	; 0
  f2:	90 40       	sbci	r25, 0x00	; 0
  f4:	e1 f7       	brne	.-8      	; 0xee <main+0x6e>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <main+0x78>
  f8:	00 00       	nop
        _delay_ms(LONG_DELAY);
        PORTB = PORTB ^ (1<<LED_GREEN);
  fa:	95 b1       	in	r25, 0x05	; 5
  fc:	98 27       	eor	r25, r24
  fe:	95 b9       	out	0x05, r25	; 5
 100:	2f ef       	ldi	r18, 0xFF	; 255
 102:	31 ee       	ldi	r19, 0xE1	; 225
 104:	94 e0       	ldi	r25, 0x04	; 4
 106:	21 50       	subi	r18, 0x01	; 1
 108:	30 40       	sbci	r19, 0x00	; 0
 10a:	90 40       	sbci	r25, 0x00	; 0
 10c:	e1 f7       	brne	.-8      	; 0x106 <main+0x86>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <main+0x90>
 110:	00 00       	nop
        //2
        _delay_ms(SHORT_DELAY);
        DDRB = DDRB | (1<<LED_GREEN);
 112:	25 9a       	sbi	0x04, 5	; 4
        PORTB = PORTB ^ (1<<LED_GREEN);
 114:	95 b1       	in	r25, 0x05	; 5
 116:	98 27       	eor	r25, r24
 118:	95 b9       	out	0x05, r25	; 5
        
        DDRB = DDRB | (1<<LED_GREEN);
 11a:	25 9a       	sbi	0x04, 5	; 4
        PORTB = PORTB ^ (1<<LED_GREEN);
 11c:	95 b1       	in	r25, 0x05	; 5
 11e:	98 27       	eor	r25, r24
 120:	95 b9       	out	0x05, r25	; 5
 122:	2f ef       	ldi	r18, 0xFF	; 255
 124:	35 ea       	ldi	r19, 0xA5	; 165
 126:	9e e0       	ldi	r25, 0x0E	; 14
 128:	21 50       	subi	r18, 0x01	; 1
 12a:	30 40       	sbci	r19, 0x00	; 0
 12c:	90 40       	sbci	r25, 0x00	; 0
 12e:	e1 f7       	brne	.-8      	; 0x128 <main+0xa8>
 130:	00 c0       	rjmp	.+0      	; 0x132 <main+0xb2>
 132:	00 00       	nop
        
        _delay_ms(LONG_DELAY);
        DDRB = DDRB | (1<<LED_GREEN);
 134:	25 9a       	sbi	0x04, 5	; 4
 136:	2f ef       	ldi	r18, 0xFF	; 255
 138:	31 ee       	ldi	r19, 0xE1	; 225
 13a:	94 e0       	ldi	r25, 0x04	; 4
 13c:	21 50       	subi	r18, 0x01	; 1
 13e:	30 40       	sbci	r19, 0x00	; 0
 140:	90 40       	sbci	r25, 0x00	; 0
 142:	e1 f7       	brne	.-8      	; 0x13c <main+0xbc>
 144:	00 c0       	rjmp	.+0      	; 0x146 <main+0xc6>
 146:	00 00       	nop
        _delay_ms(SHORT_DELAY);
        PORTB = PORTB ^ (1<<LED_GREEN);
 148:	95 b1       	in	r25, 0x05	; 5
 14a:	98 27       	eor	r25, r24
 14c:	95 b9       	out	0x05, r25	; 5
 14e:	2f ef       	ldi	r18, 0xFF	; 255
 150:	35 ea       	ldi	r19, 0xA5	; 165
 152:	9e e0       	ldi	r25, 0x0E	; 14
 154:	21 50       	subi	r18, 0x01	; 1
 156:	30 40       	sbci	r19, 0x00	; 0
 158:	90 40       	sbci	r25, 0x00	; 0
 15a:	e1 f7       	brne	.-8      	; 0x154 <main+0xd4>
 15c:	00 c0       	rjmp	.+0      	; 0x15e <main+0xde>
 15e:	00 00       	nop
        
        _delay_ms(LONG_DELAY);
        DDRB = DDRB | (1<<LED_GREEN);
 160:	25 9a       	sbi	0x04, 5	; 4
 162:	2f ef       	ldi	r18, 0xFF	; 255
 164:	31 ee       	ldi	r19, 0xE1	; 225
 166:	94 e0       	ldi	r25, 0x04	; 4
 168:	21 50       	subi	r18, 0x01	; 1
 16a:	30 40       	sbci	r19, 0x00	; 0
 16c:	90 40       	sbci	r25, 0x00	; 0
 16e:	e1 f7       	brne	.-8      	; 0x168 <main+0xe8>
 170:	00 c0       	rjmp	.+0      	; 0x172 <main+0xf2>
 172:	00 00       	nop
        _delay_ms(SHORT_DELAY);
        PORTB = PORTB ^ (1<<LED_GREEN);
 174:	95 b1       	in	r25, 0x05	; 5
 176:	98 27       	eor	r25, r24
 178:	95 b9       	out	0x05, r25	; 5
 17a:	2f ef       	ldi	r18, 0xFF	; 255
 17c:	35 ea       	ldi	r19, 0xA5	; 165
 17e:	9e e0       	ldi	r25, 0x0E	; 14
 180:	21 50       	subi	r18, 0x01	; 1
 182:	30 40       	sbci	r19, 0x00	; 0
 184:	90 40       	sbci	r25, 0x00	; 0
 186:	e1 f7       	brne	.-8      	; 0x180 <main+0x100>
 188:	00 c0       	rjmp	.+0      	; 0x18a <main+0x10a>
 18a:	00 00       	nop
        
        _delay_ms(LONG_DELAY);
        DDRB = DDRB | (1<<LED_GREEN);
 18c:	25 9a       	sbi	0x04, 5	; 4
 18e:	2f ef       	ldi	r18, 0xFF	; 255
 190:	31 ee       	ldi	r19, 0xE1	; 225
 192:	94 e0       	ldi	r25, 0x04	; 4
 194:	21 50       	subi	r18, 0x01	; 1
 196:	30 40       	sbci	r19, 0x00	; 0
 198:	90 40       	sbci	r25, 0x00	; 0
 19a:	e1 f7       	brne	.-8      	; 0x194 <main+0x114>
 19c:	00 c0       	rjmp	.+0      	; 0x19e <main+0x11e>
 19e:	00 00       	nop
        _delay_ms(SHORT_DELAY);
        PORTB = PORTB ^ (1<<LED_GREEN);
 1a0:	95 b1       	in	r25, 0x05	; 5
 1a2:	98 27       	eor	r25, r24
 1a4:	95 b9       	out	0x05, r25	; 5
 1a6:	6f cf       	rjmp	.-290    	; 0x86 <main+0x6>

000001a8 <_exit>:
 1a8:	f8 94       	cli

000001aa <__stop_program>:
 1aa:	ff cf       	rjmp	.-2      	; 0x1aa <__stop_program>
